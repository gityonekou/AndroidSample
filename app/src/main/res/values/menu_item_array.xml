<?xml version="1.0" encoding="utf-8"?>
<!--
  更新履歴
  ver1.00 新規作成
  ver2.00 更新
  ・appメニューのJobIntentServiceをWorkManagerに変更
  ver2.01 更新
  1．ButtonメニューにToggleButtonサンプル01の追加
  2．ButtonメニューにSwitchサンプル01、02、・・の追加
-->
<resources>
    <string-array name="top_menu">
        <item>1. Button</item>
        <item>2. TextViewとEditText</item>
        <item>3. ImageViewとScrollView、Android標準アイコン</item>
        <item>4. 進捗バー(ProgressBar, SeekBar)</item>
        <item>5. 通知(トースト, スナックバー)</item>
        <item>6. 選択GUI(CheckBox, プルダウン, 各種Picker, Alertダイアログ)</item>
        <item>7. アプリ(Activity, Fragment, Service)</item>
        <item>8. リスト表示(ListView⇒RecyclerView, GridView)</item>
        <item>9. データストレージ(I/O)</item>
        <item>99. その他</item>
    </string-array>

    <string-array name="button_menu">
        <item>1. 簡単な Button アプリを作る</item>
        <item>2. レイアウトをJavaコードだけで設定する(LinearLayout ver1)</item>
        <item>3. レイアウトをJavaコードだけで設定する(LinearLayout ver2)</item>
        <item>4. レイアウトをJavaコードだけで設定する(RelativeLayout ver)</item>
        <item>5. shape(シェイプ)を使ってカスタムボタンを作る(デベロッパーサンプルを試す)</item>
        <item>6. shape(シェイプ)を使ってカスタムボタンを作る</item>
        <item>7. ImageButton に画像を設定する(レイアウトを使用)</item>
        <item>8. ImageButton に画像を設定する(Javaコードで設定(android:src))</item>
        <item>9. ImageButton に画像を設定する(Javaコードで設定(android:background))</item>
        <item>10. onClickListenerの色々な設定</item>
        <item>11. Button 配列を設定する(ViewにTagでマーキングする)</item>
        <item>12. ToggleButtonを使ってON・OFFを設定する</item>
    </string-array>

    <string-array name="text_menu">
        <item>1. TextViewで文字を表示</item>
        <item>2. レイアウトファイルを使わないでコードでTextViewを設定(LinearLayout版)</item>
        <item>3. レイアウトファイルを使わないでコードでTextViewを設定(ConstraintLayout版)</item>
        <item>4. Text Selectionの実装(テキストのコピペ)</item>
        <item>5. EditTextを使って文字を入力する(レイアウトを使う)</item>
        <item>6. EditTextを使って文字を入力する(コードですべて書く)</item>
        <item>7. EditTextの文字入力制限と表示制限</item>
        <item>8. TextWatcherで入力を監視する</item>
    </string-array>

    <string-array name="image_view_menu">
        <item>1. ImageViewを使って画像を表示する：(android:srcを使う)</item>
        <item>2. ImageViewを使って画像を表示する：(ImageView.setImageResourceメソッドを使う)</item>
        <item>3. ImageViewを使って画像を表示する：(assetsに画像を置きそれを取り込む)</item>
        <item>4. 上サンプルをLayoutを使わずコードで(ic_launcherを画像として表示)</item>
        <item>5. 画像をドラッグする：(View.layout()メソッド)</item>
        <item>6. 画像をドラッグする：(onTouchムーブアクション)</item>
        <item>7. Matrixで画像を回転、フリップ、縮小させる</item>
        <item>8. Picassoで大きい画像を扱ってみる</item>
        <item>9. ScrollView(縦スクロール)</item>
        <item>10. ScrollView(複数UI：縦スクロール)</item>
        <item>11. ScrollView(縦スクロール)コード版</item>
        <item>12. HorizontalScrollView(横スクロール)</item>
        <item>13. HorizontalScrollView(横スクロール)コード版</item>
        <item>14. Android標準アイコン</item>
        <item>15. Android標準アイコン(一覧表示)</item>
        <item>16. Android標準アイコン(一覧表示:getIdentifierを使う)</item>
    </string-array>

    <string-array name="bar_gui_menu">
        <item>1.ProgressBarで進捗状況を表示する(表示のみ)</item>
        <item>2.ProgressBarの表示/非表示と進捗状況の表示</item>
        <item>3.SeekBarでボリューム入力</item>
        <item>4.SeekBarのツマミ(thumb)とprogress(bar)のカスタマイズのレイアウト版</item>
        <item>5.SeekBarのツマミ(thumb)とprogress(bar)のカスタマイズのコード版</item>
    </string-array>

    <string-array name="notify_menu">
        <item>1.Toast(トースト)の表示</item>
        <item>2.Snackbar(スナックバー)を表示する</item>
        <item>3.Snackbar(スナックバー)で簡単なアクションを実装する</item>
    </string-array>

    <string-array name="selected_gui_menu">
        <item>1.CheckBoxの配置</item>
        <item>2.Spinner(スピナー)でプルダウンを表示する</item>
        <item>3.Spinnerでプルダウンを表示する(文字列リソースxml版)</item>
        <item>4.Spinnerをカスタマイズする(drawable版)</item>
        <item>5.Spinnerをカスタマイズする(assets版)</item>
        <item>6.DatePicker</item>
        <item>7.TimePicker</item>
        <item>8.NumberPicker</item>
        <item>9.AlertDialog</item>
        <item>10.AlertDialog(OK,Cancel)</item>
        <item>11.カスタムAlertDialog</item>
        <item>12.カスタムAlertDialog(パスワード入力)</item>
    </string-array>

    <string-array name="app_menu">
        <item>1.Activityの画面遷移(main⇔sub)</item>
        <item>2.Activity(main⇔sub)間のデータ受け渡し:registerForActivityResult()について</item>
        <item>3.グローバル変数(アプリケーション内の共有データ)を参照する＋mainとsubのライフサイクル確認</item>
        <item>4.Activityライフサイクルと画面回転</item>
        <item>5.Fragmentを「Hello World」から始める</item>
        <item>6.Fragmentタグ部分をコードで動的に設定する</item>
        <item>7.画面遷移(Activity⇔Fragment)、戻る「◀」ボタン</item>
        <item>8.画面遷移(Fragment⇔Fragment)</item>
        <item>9.画面遷移(Fragment⇔Fragment)貼り付け部分の通知版</item>
        <item>10.Serviceの使い方</item>
        <item>11.WindowManagerを使ってServiceから画像を表示させ続ける</item>
        <item>12.WorkManagerを使った(簡単な)バックグラウンド処理</item>
        <item>13.WorkManagerを使ってバックグラウンドでゲーム効果音を再生</item>
    </string-array>

    <string-array name="list_menu">
        <item>1.簡単なテキストリストの表示(simple_list_item_1)</item>
        <item>2.簡単なテキストリストの表示(リストのレイアウトをカスタマイズ)</item>
        <item>3.簡単なテキストリストの表示(ListViewのヘッダー、フッター)</item>
        <item>4.ListViewタグを使う(＋レイアウトでヘッダー、フッター)</item>
        <item>5.ListFragmentの使い方(ListActivity:非推奨の代替)</item>
        <item>6.BaseAdapterを継承しカスタムでadapterを作る＋画面遷移</item>
        <item>7.ListViewアイテムの移動と削除(本来はRecyclerViewでやるべき)</item>
        <item>8.個々のアイテムでレイアウトを変える</item>
        <item>9.RecyclerViewでテキストリストの表示</item>
        <item>10.RecyclerViewで画像リストの表示</item>
        <item>11.RecyclerViewとItemTouchHelperでドラッグ&amp;ドロップ</item>
        <item>12.GridViewで画像を格子状に並べる</item>
        <item>13.Picassoでネット上の画像をGridViewで表示</item>
    </string-array>

    <string-array name="data_storage_menu">
        <item>1.ファイルの入出力(アプリ固有の内部ストレージとgetFilesDir)</item>
        <item>2.ファイルの入出力(アプリ固有の内部ストレージとopenFileInput・Output)</item>
        <item>3.ファイルの入出力(アプリ固有の外部ストレージ)</item>
        <item>4.MediaStore：ファイル出力</item>
        <item>5.MediaStore：ファイル参照</item>
        <item>6.SAF(Storage Access Framework)でフォトアプリから画像を取り出す</item>
        <item>7.SAF(Storage Access Framework)でテキストファイルを保存する</item>
        <item>8.SAF(Storage Access Framework)でイメージファイルを保存する</item>
        <item>9.アプリ設定データの保存(SharedPreferences)</item>
        <item>10.SQLite(データベース)の簡単なサンプル</item>
    </string-array>

    <string-array name="other_menu">
        <item>1.非同期処理 Executorの使い方</item>
        <item>2.HTTP POSTのデータ送信をVolleyで実装する</item>
        <item>3.HTTP 非同期で(GETで要求した)画像をダウンロードする</item>
        <item>99. 工事中画面表示</item>
    </string-array>
</resources>